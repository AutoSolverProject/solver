====================================================================================================================
============================= Project in Automated Reasoning About Software ========================================
====================================================================================================================

Authors: Ofer Ravid, Tomer Michael.

This project includes files taken from course "Mathematical Logic for Programming Oriented Students".
These files were authored for the exercises in that course by Yannai Gonczarowski and Noam Nisan,
with implementations by Ofer, and we were given permission to use in this project.
These files are located in the folders: first_order_logic and propositional_logic.

For the project we authored the following files:
- sat_solver.py - Mainly authored by Tomer.
- smt_solver.py - Mainly authored by Ofer.
- lp_theory_solver - Unfinished implementation for part 3 of the project, authored by Ofer.
- cnf_syntax.py - Authored by Tomer.
- disjoint_set_tree.py - Authored by Ofer.
- utils.formula_utils.py - Authored by Tomer.
- utils.normal_forms.py - Co-authored by Ofer and Tomer.
- utils.test_utils.py - Authored by Tomer.
- naive_lp_solver - Authored by Ofer, solving an alternate part 3, this include:
    - naive_lp_solver.cpp
    - Makefile


To run the solver, open shell (in Linux) or cmd prompt (in Windows), in the folder of the project, and type:
---- python3 main.py

To run the naive_lp_solver, open shell (in Linux) or cmd prompt (in Windows), in the folder of the project, and type:
---- make
(make clean - will delete the compiled files)
Additionally to edit the problem the naive_lp_solver solves, open the naive_lp_solver.cpp file, change the values
of n and m, where n is the number of variables in the objective and m is the number of constraint equations/inequations,
and change the values in the function readInputProblem.
